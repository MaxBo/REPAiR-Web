version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4
machine:
  environment:
    DJANGO_SETTINGS_MODULE: repair.settings_circleci
jobs:
  django testing:
    docker:
      - image: gertzgutscheruemenapp/repair-web
      - image: circleci/postgres:13-postgis-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - run: mkdir test-reports
      - run: source activate repair
      - run:
          name: Install Python deps in a venv
          command: |
            pip install -r requirements-dev.txt
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for Router
          command: dockerize -wait tcp://localhost:8001 -timeout 1m
      - run:
          name: Wait for Database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Migrate Test Database
          command: |
            python manage.py migrate --settings=datentool.settings_circleci
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
      - run:
          name: codecov
          command: |
            coverage run manage.py test --settings=repair.settings_circleci
            codecov


  selenium testing:
    docker:
      - image: gertzgutscheruemenapp/repair-web
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            pip install -r requirements-dev.txt
      - run:
          name: Install Node Modules
          command: |
            yarn install
      - run:
          name: Configure Javascript packages
          command: |
            node_modules/.bin/webpack --config repair/webpack.staged.config.js
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Migrate Test Database
          command: |
            python manage.py migrate --settings=repair.settings_staged
      - run:
          name: load fixtures to test database
          command: |
            python manage.py loaddata sandbox_data --settings=repair.settings_staged
            python manage.py loaddata seleniumtester --settings=repair.settings_staged
      - run:
          name: start Testserver
          command: |
            python manage.py runserver 4444 --settings=repair.settings_staged
          background: true
      - run:
          name: Selenium Tests
          command: |
            python repair/tests/EditActorTest_orig.py
      - store_artifacts:
          path: repair/tests/artifacts


  jasmine tests:
    docker:
      - image: gertzgutscheruemenapp/repair-web
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Install Python deps in a venv
          command: |
            pip install -r requirements-dev.txt
      - run:
          name: Install Node Modules
          command: |
            yarn install
      - run:
          name: Configure Javascript packages
          command: |
            node_modules/.bin/webpack --config repair/webpack.dev.config.js
      - run:
          name: Migrate Test Database
          command: |
            python manage.py migrate --settings=repair.settings4tests
      - run:
          name: start Testserver
          command: |
            python manage.py runserver 4444 --settings=repair.settings4tests
          background: true
      - run:
          name: Run Jasmine Tests
          command: |
            node_modules/.bin/jasmine


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - django testing
